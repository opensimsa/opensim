# -*- coding: utf-8 -*-

# Macro Begin: elbow
import FreeCAD
import _CommandCfdAnalysis
import FemGui
import CfdAnalysis
import CfdPhysicsSelection
import CfdFluidMaterial
import CfdInitialiseFlowField
import CfdSolverFoam
import _CommandCfdMeshGmshFromShape
import CfdMeshGmsh
import _CommandCfdFluidBoundary
import CfdFluidBoundary

#Gui.activateWorkbench("CfdFoamWorkbench")
analysis = CfdAnalysis.makeCfdAnalysis('CfdAnalysis')
FemGui.setActiveAnalysis(analysis)
analysis.addObject(CfdPhysicsSelection.makeCfdPhysicsSelection())
analysis.addObject(CfdFluidMaterial.makeCfdFluidMaterial('FluidProperties'))
analysis.addObject(CfdInitialiseFlowField.makeCfdInitialFlowField())
analysis.addObject(CfdSolverFoam.makeCfdSolverFoam())

phys = FreeCAD.ActiveDocument.PhysicsModel.PhysicsModel
phys['Time'] = 'Steady'
phys['Flow'] = 'Incompressible'
phys['Turbulence'] = 'Laminar'
phys['TurbulenceModel'] = 'None'
phys['Thermal'] = None
FreeCAD.ActiveDocument.PhysicsModel.PhysicsModel = phys

mat = FreeCAD.ActiveDocument.FluidProperties.Material
mat['Density'] = '1.2 kg/m^3'
mat['DynamicViscosity'] = '1.8e-05 kg/m/s'
FreeCAD.ActiveDocument.FluidProperties.Material = mat

# Values are converted to SI units and stored (eg. m/s)
init = FreeCAD.ActiveDocument.InitialiseFields.InitialVariables
init['PotentialFoam'] = True
init['Ux'] = 0.0
init['Uy'] = 0.0
init['Uz'] = 0.0
init['Pressure'] = 0.0
init['UseInletTurbulenceValues'] = False
init['omega'] = 1.0
init['k'] = 0.01
FreeCAD.ActiveDocument.InitialiseFields.InitialVariables = init
CfdMeshGmsh.makeCfdMeshGmsh('Pad_GmshMesh')
App.ActiveDocument.ActiveObject.Part = App.ActiveDocument.Pad
FemGui.getActiveAnalysis().addObject(App.ActiveDocument.ActiveObject)

FreeCAD.ActiveDocument.Pad_GmshMesh.CharacteristicLengthMax = '1000 mm'
FreeCAD.ActiveDocument.Pad_GmshMesh.CharacteristicLengthMin = '0 mm'

FemGui.getActiveAnalysis().addObject(CfdFluidBoundary.makeCfdFluidBoundary())
# Values are converted to SI units and stored (eg. m/s)
bc = FreeCAD.ActiveDocument.CfdFluidBoundary.BoundarySettings
bc['BoundaryType'] = 'inlet'
bc['BoundarySubtype'] = 'uniformVelocity'
bc['ThermalBoundaryType'] = 'fixedValue'
bc['VelocityIsCartesian'] = True
bc['Ux'] = 1.0
bc['Uy'] = 0.0
bc['Uz'] = 0.0
bc['VelocityMag'] = 0.0
bc['DirectionFace'] = 'Pad:Face2'
bc['ReverseNormal'] = True
bc['MassFlowRate'] = 0.0
bc['VolFlowRate'] = 0.0
bc['Pressure'] = 0.0
bc['SlipRatio'] = 0.0
bc['TurbulenceInletSpecification'] = 'intensityAndLengthScale'
bc['TurbulentKineticEnergy'] = 0.01
bc['SpecificDissipationRate'] = 1.0
bc['TurbulenceIntensity'] = 0.1
bc['TurbulenceLengthScale'] = 0.1
bc['PressureDropCoeff'] = 0.0
bc['ScreenWireDiameter'] = 0.0
bc['ScreenSpacing'] = 0.0
bc['PorousBaffleMethod'] = 0
FreeCAD.ActiveDocument.CfdFluidBoundary.BoundarySettings = bc
FreeCAD.ActiveDocument.CfdFluidBoundary.Label = 'inlet1'
FreeCAD.ActiveDocument.CfdFluidBoundary.References.append(('Pad', 'Face2'))
FreeCAD.getDocument('elbow').recompute()

FemGui.getActiveAnalysis().addObject(CfdFluidBoundary.makeCfdFluidBoundary())
# Values are converted to SI units and stored (eg. m/s)
bc = FreeCAD.ActiveDocument.CfdFluidBoundary001.BoundarySettings
bc['BoundaryType'] = 'inlet'
bc['BoundarySubtype'] = 'uniformVelocity'
bc['ThermalBoundaryType'] = 'fixedValue'
bc['VelocityIsCartesian'] = True
bc['Ux'] = 0.0
bc['Uy'] = 3.0
bc['Uz'] = 0.0
bc['VelocityMag'] = 0.0
bc['DirectionFace'] = 'Pad:Face10'
bc['ReverseNormal'] = True
bc['MassFlowRate'] = 0.0
bc['VolFlowRate'] = 0.0
bc['Pressure'] = 0.0
bc['SlipRatio'] = 0.0
bc['TurbulenceInletSpecification'] = 'intensityAndLengthScale'
bc['TurbulentKineticEnergy'] = 0.01
bc['SpecificDissipationRate'] = 1.0
bc['TurbulenceIntensity'] = 0.1
bc['TurbulenceLengthScale'] = 0.1
bc['PressureDropCoeff'] = 0.0
bc['ScreenWireDiameter'] = 0.0
bc['ScreenSpacing'] = 0.0
bc['PorousBaffleMethod'] = 0
FreeCAD.ActiveDocument.CfdFluidBoundary001.BoundarySettings = bc
FreeCAD.ActiveDocument.CfdFluidBoundary001.Label = 'inlet2'
FreeCAD.ActiveDocument.CfdFluidBoundary001.References.append(('Pad', 'Face10'))
FreeCAD.getDocument('elbow').recompute()

FemGui.getActiveAnalysis().addObject(CfdFluidBoundary.makeCfdFluidBoundary())
# Values are converted to SI units and stored (eg. m/s)
bc = FreeCAD.ActiveDocument.CfdFluidBoundary002.BoundarySettings
bc['BoundaryType'] = 'outlet'
bc['BoundarySubtype'] = 'staticPressure'
bc['ThermalBoundaryType'] = 'fixedValue'
bc['VelocityIsCartesian'] = True
bc['Ux'] = 0.0
bc['Uy'] = 0.0
bc['Uz'] = 0.0
bc['VelocityMag'] = 0.0
bc['DirectionFace'] = 'Pad:Face6'
bc['ReverseNormal'] = False
bc['MassFlowRate'] = 0.0
bc['VolFlowRate'] = 0.0
bc['Pressure'] = 0.0
bc['SlipRatio'] = 0.0
bc['TurbulenceInletSpecification'] = 'intensityAndLengthScale'
bc['TurbulentKineticEnergy'] = 0.01
bc['SpecificDissipationRate'] = 1.0
bc['TurbulenceIntensity'] = 0.1
bc['TurbulenceLengthScale'] = 0.1
bc['PressureDropCoeff'] = 0.0
bc['ScreenWireDiameter'] = 0.0
bc['ScreenSpacing'] = 0.0
bc['PorousBaffleMethod'] = 0
FreeCAD.ActiveDocument.CfdFluidBoundary002.BoundarySettings = bc
FreeCAD.ActiveDocument.CfdFluidBoundary002.Label = 'outlet'
FreeCAD.ActiveDocument.CfdFluidBoundary002.References.append(('Pad', 'Face6'))
FreeCAD.getDocument('elbow').recompute()

FemGui.getActiveAnalysis().addObject(CfdFluidBoundary.makeCfdFluidBoundary())
# Values are converted to SI units and stored (eg. m/s)
bc = FreeCAD.ActiveDocument.CfdFluidBoundary003.BoundarySettings
bc['BoundaryType'] = 'wall'
bc['BoundarySubtype'] = 'slip'
bc['ThermalBoundaryType'] = 'fixedValue'
bc['VelocityIsCartesian'] = True
bc['Ux'] = 0.0
bc['Uy'] = 0.0
bc['Uz'] = 0.0
bc['VelocityMag'] = 0.0
bc['DirectionFace'] = 'Pad:Face3'
bc['ReverseNormal'] = False
bc['MassFlowRate'] = 0.0
bc['VolFlowRate'] = 0.0
bc['Pressure'] = 0.0
bc['SlipRatio'] = 0.0
bc['TurbulenceInletSpecification'] = 'intensityAndLengthScale'
bc['TurbulentKineticEnergy'] = 0.01
bc['SpecificDissipationRate'] = 1.0
bc['TurbulenceIntensity'] = 0.1
bc['TurbulenceLengthScale'] = 0.1
bc['PressureDropCoeff'] = 0.0
bc['ScreenWireDiameter'] = 0.0
bc['ScreenSpacing'] = 0.0
bc['PorousBaffleMethod'] = 0
FreeCAD.ActiveDocument.CfdFluidBoundary003.BoundarySettings = bc
FreeCAD.ActiveDocument.CfdFluidBoundary003.Label = 'wall'
FreeCAD.ActiveDocument.CfdFluidBoundary003.References.append(('Pad', 'Face1'))
FreeCAD.ActiveDocument.CfdFluidBoundary003.References.append(('Pad', 'Face3'))
FreeCAD.ActiveDocument.CfdFluidBoundary003.References.append(('Pad', 'Face4'))
FreeCAD.ActiveDocument.CfdFluidBoundary003.References.append(('Pad', 'Face5'))
FreeCAD.ActiveDocument.CfdFluidBoundary003.References.append(('Pad', 'Face7'))
FreeCAD.ActiveDocument.CfdFluidBoundary003.References.append(('Pad', 'Face8'))
FreeCAD.ActiveDocument.CfdFluidBoundary003.References.append(('Pad', 'Face9'))
FreeCAD.ActiveDocument.CfdFluidBoundary003.References.append(('Pad', 'Face11'))
FreeCAD.ActiveDocument.CfdFluidBoundary003.References.append(('Pad', 'Face12'))
# Macro End: elbow
